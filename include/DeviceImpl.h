/*----- PROTECTED REGION ID(TestChimeraTK.h) ENABLED START -----*/
//=============================================================================
//
// file :        TestChimeraTK.h
//
// description : Include file for the TestChimeraTK class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef TestChimeraTK_H
#define TestChimeraTK_H

#include <tango.h>
#include <AttributProperty.h>
#include <TangoAdapter.h>
//#include "MyApplication.h"


/*----- PROTECTED REGION END -----*/	//	TestChimeraTK.h

/**
 *  TestChimeraTK class description:
 *    Test
 */

namespace ChimeraTK::TangoAdapter
{
/*----- PROTECTED REGION ID(DeviceImpl::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations

/*----- PROTECTED REGION END -----*/	//	DeviceImpl::Additional Class Declarations

class DeviceImpl : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(DeviceImpl::Data Members) ENABLED START -----*/

//	Add your own data members
private: 
	AdapterImpl* adapter;
	//ExampleApp *theExampleApp;
/*----- PROTECTED REGION END -----*/	//	DeviceImpl::Data Members

//	Device property data members
public:

	vector<string>	attributList;
	//	DMapFilePath:	DMapFilePath
	string	dMapFilePath;


//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	DeviceImpl(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	DeviceImpl(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	DeviceImpl(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */
	~DeviceImpl() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Read the device properties from database
	 */
	void get_device_property();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : DeviceImpl::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);


	//--------------------------------------------------------
	/**
	 *	Method      : DeviceImpl::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();




//	Command related methods
public:


	//--------------------------------------------------------
	/**
	 *	Method      : DeviceImpl::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(DeviceImpl::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes

/*----- PROTECTED REGION END -----*/	//	DeviceImpl::Additional Method prototypes
};

/*----- PROTECTED REGION ID(DeviceImpl::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	DeviceImpl::Additional Classes Definitions

}	//	End of namespace

#endif   //	TestChimeraTK_H
